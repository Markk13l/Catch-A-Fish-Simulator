local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\23\186","\163\57\148\205\214\180"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v121=v13(v103,v30);v30=nil;return v121;else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=(v43/((7 -5)^(v44-1)))%(2^(((v45-1) -(v44-1)) + (3 -2))) ;return v104-(v104%1) ;else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or (0 -0) ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48,v49=v9(v27,v29,v29 + (5 -3) );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * (43216383 -26439167)) + (v53 * 65536) + (v52 * (875 -(555 + 64))) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,963 -(857 + 74) )==1) and  -1) or 1 ;v55=3;end if (0==v55) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/(568 -(367 + 201))))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^(979 -(214 + 713))))) ;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==2) then v65={};for v109=1, #v64 do v65[v109]=v10(v9(v11(v64,v109,v109)));end v63=3;end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then local v116=0;while true do if (v116==0) then v62=v34();if (v62==(0 + 0)) then return "";end break;end end end v63=1;end if (3==v63) then return v14(v65);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1 + 0 ,v70 do local v80=0;local v81;local v82;while true do if (1==v80) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end if (v80==0) then v81=v32();v82=nil;v80=1;end end end v69[888 -(261 + 624) ]=v32();for v83=1,v34() do local v84=0;local v85;while true do if (v84==0) then v85=v32();if (v31(v85,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then v120[3]=v33();v120[4]=v33();elseif (v118==(1 -0)) then v120[3]=v34();elseif (v118==2) then v120[1083 -(1020 + 60) ]=v34() -(2^16) ;elseif (v118==3) then v120[3]=v34() -(2^(3 + 13)) ;v120[881 -(282 + 595) ]=v33();end v117=2;end if (v117==0) then v118=v31(v85,2,3);v119=v31(v85,4,6);v117=1;end if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v71[v120[4]];end v66[v83]=v120;break;end if (2==v117) then if (v31(v119,1424 -(630 + 793) ,1)==(1638 -(1523 + 114))) then v120[2 + 0 ]=v71[v120[2 -0 ]];end if (v31(v119,1067 -(68 + 997) ,2)==1) then v120[1273 -(226 + 1044) ]=v71[v120[3]];end v117=3;end end end break;end end end for v86=1,v34() do v67[v86-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[3 -2 ];local v77=v73[2];local v78=v73[3];return function(...) local v88=v76;local v89=v77;local v90=v78;local v91=v38;local v92=4 -3 ;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v106=0,v96 do if (v106>=v90) then v94[v106-v90 ]=v95[v106 + 1 ];else v98[v106]=v95[v106 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do v100=v88[v92];v101=v100[1];if (v101<=45) then if (v101<=22) then if (v101<=10) then if (v101<=4) then if (v101<=1) then if (v101==0) then local v132=v100[2];v98[v132]=v98[v132](v98[v132 + (118 -(32 + 85)) ]);else v98[v100[2]]();end elseif (v101<=2) then v98[v100[2]]=v100[3] + v98[v100[4]] ;elseif (v101>(2 + 1)) then v98[v100[2]]=v98[v100[9 -6 ]];else local v200=0;local v201;while true do if (v200==0) then v201=v100[2];v98[v201](v98[v201 + 1 ]);break;end end end elseif (v101<=(7 + 0)) then if (v101<=5) then v75[v100[3]]=v98[v100[2]];elseif (v101==6) then v98[v100[2]]();else local v202=0;local v203;while true do if (v202==0) then v203=v100[2];v98[v203]=v98[v203](v98[v203 + (1914 -(1789 + 124)) ]);break;end end end elseif (v101<=(774 -(745 + 21))) then if v98[v100[2]] then v92=v92 + 1 + 0 ;else v92=v100[3];end elseif (v101>9) then local v205=v100[959 -(892 + 65) ];local v206=v98[v205];for v318=v205 + 1 ,v93 do v15(v206,v98[v318]);end else local v207=0;local v208;while true do if (v207==0) then v208=v100[5 -3 ];v98[v208](v21(v98,v208 + 1 ,v93));break;end end end elseif (v101<=16) then if (v101<=13) then if (v101<=11) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101==12) then v98[v100[2]]=v98[v100[3]][v98[v100[4]]];else local v211=0;local v212;local v213;local v214;local v215;while true do if (v211==1) then v93=(v214 + v212) -1 ;v215=0 -0 ;v211=2;end if (v211==2) then for v417=v212,v93 do local v418=0;while true do if (0==v418) then v215=v215 + 1 + 0 ;v98[v417]=v213[v215];break;end end end break;end if (0==v211) then v212=v100[2];v213,v214=v91(v98[v212](v21(v98,v212 + 1 ,v100[3])));v211=1;end end end elseif (v101<=14) then local v138=0;local v139;local v140;local v141;while true do if (v138==0) then v139=v100[4 -2 ];v140=v98[v139];v138=1;end if (v138==1) then v141=v100[3];for v365=1,v141 do v140[v365]=v98[v139 + v365 ];end break;end end elseif (v101>15) then v98[v100[2]]=v74[v100[3]];else local v218=v89[v100[3]];local v219;local v220={};v219=v18({},{[v7("\27\73\27\243\49\49\227","\54\68\22\114\157\85\84\155")]=function(v322,v323) local v324=v220[v323];return v324[1 + 0 ][v324[2]];end,[v7("\244\44\202\88\225\35\141\192\206\11","\164\171\115\164\61\150\74\227")]=function(v325,v326,v327) local v328=0;local v329;while true do if (v328==0) then v329=v220[v326];v329[1][v329[2]]=v327;break;end end end});for v330=1,v100[4] do local v331=0;local v332;while true do if (v331==1) then if (v332[1]==74) then v220[v330-1 ]={v98,v332[4 -1 ]};else v220[v330-(4 -3) ]={v74,v332[3]};end v97[ #v97 + 1 ]=v220;break;end if (v331==0) then v92=v92 + 1 ;v332=v88[v92];v331=1;end end end v98[v100[2]]=v40(v218,v219,v75);end elseif (v101<=19) then if (v101<=17) then v98[v100[2]]= #v98[v100[3 + 0 ]];elseif (v101==(40 -22)) then v98[v100[2]]=v40(v89[v100[3]],nil,v75);else v98[v100[2]]={};end elseif (v101<=20) then local v143=0;local v144;local v145;local v146;while true do if (v143==0) then v144=v100[2];v145=v98[v144];v143=1;end if (v143==1) then v146=v100[1416 -(447 + 966) ];for v368=1,v146 do v145[v368]=v98[v144 + v368 ];end break;end end elseif (v101==21) then v98[v100[352 -(87 + 263) ]]=v98[v100[3]][v98[v100[184 -(67 + 113) ]]];else do return v98[v100[2]]();end end elseif (v101<=(1850 -(1703 + 114))) then if (v101<=27) then if (v101<=24) then if (v101==23) then v98[v100[2]][v100[3]]=v100[4];else v98[v100[2]]={};end elseif (v101<=(726 -(376 + 325))) then v98[v100[2]][v100[3]]=v100[4];elseif (v101==26) then for v336=v100[2],v100[3 + 0 ] do v98[v336]=nil;end else local v226=v100[2];local v227={};for v338=1, #v97 do local v339=0;local v340;while true do if (v339==0) then v340=v97[v338];for v445=0, #v340 do local v446=v340[v445];local v447=v446[1 -0 ];local v448=v446[4 -2 ];if ((v447==v98) and (v448>=v226)) then local v465=0;while true do if (v465==0) then v227[v448]=v447[v448];v446[1]=v227;break;end end end end break;end end end end elseif (v101<=30) then if (v101<=28) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;elseif (v101==29) then local v228=0;local v229;local v230;local v231;while true do if (v228==1) then v231=v98[v229 + 1 + 1 ];if (v231>0) then if (v230>v98[v229 + (2 -1) ]) then v92=v100[3];else v98[v229 + 3 ]=v230;end elseif (v230<v98[v229 + 1 ]) then v92=v100[3];else v98[v229 + 3 ]=v230;end break;end if (v228==0) then v229=v100[2];v230=v98[v229];v228=1;end end else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101<=31) then v98[v100[2 + 0 ]]=v98[v100[3]][v100[4]];elseif (v101>(127 -95)) then local v233=0;local v234;while true do if (v233==0) then v234=v100[2];v98[v234](v21(v98,v234 + 1 ,v100[3]));break;end end else local v235=0;local v236;while true do if (v235==0) then v236=v100[2];v98[v236](v21(v98,v236 + (15 -(9 + 5)) ,v93));break;end end end elseif (v101<=39) then if (v101<=36) then if (v101<=34) then v75[v100[379 -(85 + 291) ]]=v98[v100[954 -(802 + 150) ]];elseif (v101>35) then v98[v100[2]]=v100[3] + v98[v100[4]] ;elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=37) then v98[v100[2]]=v100[3];elseif (v101>38) then v98[v100[2]]=v75[v100[3]];else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=(112 -70)) then if (v101<=40) then local v159=0;local v160;local v161;local v162;while true do if (v159==1) then v162=v98[v160 + 2 ];if (v162>0) then if (v161>v98[v160 + 1 ]) then v92=v100[3];else v98[v160 + 3 ]=v161;end elseif (v161<v98[v160 + 1 ]) then v92=v100[3];else v98[v160 + 3 ]=v161;end break;end if (v159==0) then v160=v100[2];v161=v98[v160];v159=1;end end elseif (v101==41) then v98[v100[3 -1 ]]=v98[v100[3]]%v100[4] ;else v92=v100[3];end elseif (v101<=43) then local v163=0;local v164;while true do if (v163==0) then v164=v100[2];v98[v164]=v98[v164](v21(v98,v164 + 1 ,v100[3 + 0 ]));break;end end elseif (v101>(1041 -(915 + 82))) then local v243=0;local v244;local v245;while true do if (0==v243) then v244=v100[2];v245=v98[v100[3]];v243=1;end if (v243==1) then v98[v244 + 1 ]=v245;v98[v244]=v245[v100[4]];break;end end else v98[v100[2]]=v74[v100[8 -5 ]];end elseif (v101<=68) then if (v101<=56) then if (v101<=50) then if (v101<=47) then if (v101>46) then local v165=0;local v166;local v167;while true do if (v165==1) then for v372=v166 + 1 ,v100[3] do v15(v167,v98[v372]);end break;end if (v165==0) then v166=v100[2 + 0 ];v167=v98[v166];v165=1;end end else local v168=0;local v169;local v170;while true do if (v168==0) then v169=v100[3 -0 ];v170=v98[v169];v168=1;end if (1==v168) then for v373=v169 + (3 -2) ,v100[4] do v170=v170   .. v98[v373] ;end v98[v100[1189 -(1069 + 118) ]]=v170;break;end end end elseif (v101<=48) then local v171=v100[2];v98[v171]=v98[v171](v21(v98,v171 + 1 + 0 ,v100[3]));elseif (v101>49) then local v248=v100[2];v98[v248](v21(v98,v248 + 1 ,v100[3]));else local v249=0;local v250;local v251;while true do if (v249==1) then for v424=v250 + 1 ,v93 do v15(v251,v98[v424]);end break;end if (v249==0) then v250=v100[1182 -(1123 + 57) ];v251=v98[v250];v249=1;end end end elseif (v101<=53) then if (v101<=51) then v98[v100[2]][v98[v100[3]]]=v100[4 + 0 ];elseif (v101>52) then v98[v100[2]][v98[v100[3]]]=v100[4];else v92=v100[3];end elseif (v101<=54) then v98[v100[2]]=v100[3];elseif (v101==55) then local v255=0;local v256;while true do if (v255==0) then v256=v100[256 -(163 + 91) ];do return v21(v98,v256,v93);end break;end end else for v351=v100[2],v100[3] do v98[v351]=nil;end end elseif (v101<=62) then if (v101<=59) then if (v101<=(129 -72)) then do return v98[v100[2]]();end elseif (v101>(126 -68)) then if  not v98[v100[1 + 1 ]] then v92=v92 + (1 -0) ;else v92=v100[3];end else local v257=v100[2];local v258,v259=v91(v98[v257](v21(v98,v257 + 1 ,v93)));v93=(v259 + v257) -1 ;local v260=0;for v353=v257,v93 do local v354=0;while true do if (v354==0) then v260=v260 + 1 + 0 ;v98[v353]=v258[v260];break;end end end end elseif (v101<=60) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3 + 0 ];end elseif (v101>(852 -(368 + 423))) then local v262=v100[2];local v263,v264=v91(v98[v262](v98[v262 + (3 -2) ]));v93=(v264 + v262) -1 ;local v265=0;for v355=v262,v93 do v265=v265 + 1 ;v98[v355]=v263[v265];end else do return;end end elseif (v101<=65) then if (v101<=(197 -134)) then local v177=0;local v178;while true do if (0==v177) then v178=v100[2];do return v98[v178](v21(v98,v178 + 1 ,v100[3]));end break;end end elseif (v101==64) then local v266=0;local v267;local v268;local v269;while true do if (v266==2) then for v427=1,v100[4] do local v428=0;local v429;while true do if (v428==1) then if (v429[1]==74) then v269[v427-(19 -(10 + 8)) ]={v98,v429[3]};else v269[v427-1 ]={v74,v429[11 -8 ]};end v97[ #v97 + 1 ]=v269;break;end if (v428==0) then v92=v92 + 1 ;v429=v88[v92];v428=1;end end end v98[v100[444 -(416 + 26) ]]=v40(v267,v268,v75);break;end if (1==v266) then v269={};v268=v18({},{[v7("\60\122\38\247\55\87\74","\148\99\37\79\153\83\50\50")]=function(v430,v431) local v432=v269[v431];return v432[1][v432[2]];end,[v7("\114\98\120\118\11\122\213\73\88\110","\187\45\61\22\19\124\19")]=function(v433,v434,v435) local v436=0;local v437;while true do if (v436==0) then v437=v269[v434];v437[1][v437[2]]=v435;break;end end end});v266=2;end if (v266==0) then v267=v89[v100[3]];v268=nil;v266=1;end end else local v270=v100[1 + 1 ];v98[v270]=v98[v270]();end elseif (v101<=66) then v98[v100[2]]= #v98[v100[3]];elseif (v101==(213 -146)) then local v272=0;local v273;local v274;while true do if (0==v272) then v273=v100[3];v274=v98[v273];v272=1;end if (v272==1) then for v438=v273 + 1 ,v100[4] do v274=v274   .. v98[v438] ;end v98[v100[2]]=v274;break;end end else v98[v100[2]][v98[v100[3]]]=v98[v100[5 -1 ]];end elseif (v101<=(35 + 45)) then if (v101<=74) then if (v101<=71) then if (v101<=69) then local v180=v100[2];local v181=v98[v180 + 2 ];local v182=v98[v180] + v181 ;v98[v180]=v182;if (v181>(0 + 0)) then if (v182<=v98[v180 + 1 ]) then local v375=0;while true do if (v375==0) then v92=v100[1477 -(1329 + 145) ];v98[v180 + (4 -1) ]=v182;break;end end end elseif (v182>=v98[v180 + 1 ]) then local v376=0;while true do if (v376==0) then v92=v100[3];v98[v180 + 3 ]=v182;break;end end end elseif (v101>70) then local v277=0;local v278;local v279;local v280;while true do if (v277==1) then v280=v98[v278] + v279 ;v98[v278]=v280;v277=2;end if (v277==0) then v278=v100[973 -(140 + 831) ];v279=v98[v278 + 2 ];v277=1;end if (v277==2) then if (v279>0) then if (v280<=v98[v278 + 1 ]) then local v474=0;while true do if (v474==0) then v92=v100[3];v98[v278 + 3 ]=v280;break;end end end elseif (v280>=v98[v278 + 1 ]) then local v475=0;while true do if (v475==0) then v92=v100[3];v98[v278 + 3 ]=v280;break;end end end break;end end else local v281=0;local v282;local v283;local v284;local v285;while true do if (v281==0) then v282=v100[440 -(145 + 293) ];v283,v284=v91(v98[v282](v21(v98,v282 + 1 ,v100[3])));v281=1;end if (v281==2) then for v439=v282,v93 do local v440=0;while true do if (0==v440) then v285=v285 + 1 ;v98[v439]=v283[v285];break;end end end break;end if (v281==1) then v93=(v284 + v282) -1 ;v285=0;v281=2;end end end elseif (v101<=72) then v98[v100[2]]=v75[v100[3]];elseif (v101==(503 -(44 + 386))) then v98[v100[2]][v100[3]]=v98[v100[4]];else v98[v100[2]]=v98[v100[3]];end elseif (v101<=77) then if (v101<=75) then local v186=0;local v187;while true do if (v186==0) then v187=v100[2];v98[v187]=v98[v187]();break;end end elseif (v101>76) then local v290=0;local v291;while true do if (v290==0) then v291=v100[2];do return v98[v291](v21(v98,v291 + (1487 -(998 + 488)) ,v100[3]));end break;end end else local v292=0;local v293;local v294;local v295;local v296;while true do if (v292==2) then for v441=v293,v93 do v296=v296 + 1 ;v98[v441]=v294[v296];end break;end if (v292==1) then v93=(v295 + v293) -1 ;v296=0;v292=2;end if (v292==0) then v293=v100[2];v294,v295=v91(v98[v293](v98[v293 + (1851 -(1409 + 441)) ]));v292=1;end end end elseif (v101<=78) then local v188=0;local v189;while true do if (v188==0) then v189=v100[2];v98[v189](v98[v189 + 1 ]);break;end end elseif (v101>79) then local v297=0;local v298;while true do if (v297==0) then v298=v100[1 + 1 ];do return v21(v98,v298,v93);end break;end end else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=86) then if (v101<=83) then if (v101<=81) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>82) then local v302=0;local v303;local v304;while true do if (v302==0) then v303=v100[2];v304=v98[v100[3]];v302=1;end if (v302==1) then v98[v303 + 1 ]=v304;v98[v303]=v304[v100[4]];break;end end else local v305=0;local v306;while true do if (0==v305) then v306=v100[2 + 0 ];v98[v306]=v98[v306](v21(v98,v306 + 1 ,v93));break;end end end elseif (v101<=(522 -(262 + 176))) then local v190=v100[2];local v191,v192=v91(v98[v190](v21(v98,v190 + 1 ,v93)));v93=(v192 + v190) -1 ;local v193=772 -(201 + 571) ;for v196=v190,v93 do local v197=0;while true do if (v197==0) then v193=v193 + 1 ;v98[v196]=v191[v193];break;end end end elseif (v101>85) then v98[v100[2]]=v40(v89[v100[3]],nil,v75);else local v308=v100[2];v98[v308]=v98[v308](v21(v98,v308 + (1139 -(116 + 1022)) ,v93));end elseif (v101<=89) then if (v101<=87) then v98[v100[2]]=v98[v100[3]] + v100[4] ;elseif (v101==88) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[12 -9 ];end else local v310=v100[2];local v311={};for v362=1, #v97 do local v363=0;local v364;while true do if (v363==0) then v364=v97[v362];for v457=0, #v364 do local v458=v364[v457];local v459=v458[689 -(198 + 490) ];local v460=v458[2];if ((v459==v98) and (v460>=v310)) then local v478=0;while true do if (0==v478) then v311[v460]=v459[v460];v458[4 -3 ]=v311;break;end end end end break;end end end end elseif (v101<=90) then do return;end elseif (v101>(218 -127)) then v98[v100[2]][v100[3]]=v98[v100[4]];else v98[v100[2]][v98[v100[2 + 1 ]]]=v98[v100[4]];end v92=v92 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
